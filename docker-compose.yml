version: "3.7"

services:
  authelia:
    container_name: authelia
    depends_on:
      - openldap
      - postgres
      - redis
    env_file:
      - .env
    image: authelia/authelia:4
    networks:
      - authelia
      - traefik
    restart: always
    volumes:
      - ./authelia/configuration.yml:/etc/authelia/configuration.yml:ro

  docker-socket-proxy:
    environment:
      CONTAINERS: 1
    image: tecnativa/docker-socket-proxy
    networks:
      - docker-socket-proxy
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  handle-errors:
    build:
      context: ./handle-errors
    networks:
      - traefik
    restart: always

  openldap:
    container_name: authelia-openldap
    image: osixia/openldap:1.3.0
    env_file:
      - .env
    networks:
      - authelia
    restart: always
    volumes:
      - ldap_db:/var/lib/ldap
      - ldap_config:/etc/ldap/slapd.d

  postgres:
    container_name: authelia-postgres
    env_file:
      - .env
    image: postgres:9.6-alpine
    networks:
      - authelia
    restart: always
    volumes:
      - authelia-postgres-data:/var/lib/postgresql/data

  redis:
    container_name: authelia-redis
    image: redis:5-alpine
    networks:
      - authelia

  traefik:
    depends_on:
      - authelia
      - docker-socket-proxy
      - handle-errors
    env_file:
      - .env
    image: traefik:v2.1
    networks:
      - docker-socket-proxy
      - traefik
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - ./acme:/etc/acme
      - ./dynamic-conf:/etc/traefik/dynamic-conf:ro
      - ./traefik.yml:/etc/traefik/traefik.yml:ro

  whoami:
    container_name: simple-service
    image: containous/whoami
    networks:
      - traefik

networks:
  authelia:
  docker-socket-proxy:
  traefik:
    external: true

volumes:
  authelia-postgres-data:
  ldap_config:
  ldap_db:
